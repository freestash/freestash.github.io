<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freestash.github.io/news/article-36985.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Linux  C++  实现一个简易版的ping （也就是ICMP协议）</title>
        <meta name="description" content="想实现一个在没外网的时候就自动重启路由器的功能。 又不想用ping命令，因为在代码里调用system("ping"); 可能会比较耗时，得单开线程。于是找了个实现ICMP协议的代码。 参考：https" />
        <link rel="icon" href="/assets/website/img/freestash/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free Stash机场节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freestash.github.io/news/article-36985.htm" />
    <meta property="og:site_name" content="Free Stash机场节点订阅官网" />
    <meta property="og:title" content="Linux  C++  实现一个简易版的ping （也就是ICMP协议）" />
    <meta property="og:image" content="https://freestash.github.io/uploads/20240908-2/c92815efd0a8aca0440e316be52c7a23.webp" />
        <meta property="og:release_date" content="2025-01-07T10:06:03" />
    <meta property="og:updated_time" content="2025-01-07T10:06:03" />
        <meta property="og:description" content="想实现一个在没外网的时候就自动重启路由器的功能。 又不想用ping命令，因为在代码里调用system("ping"); 可能会比较耗时，得单开线程。于是找了个实现ICMP协议的代码。 参考：https" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Linux  C++  实现一个简易版的ping （也就是ICMP协议）">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Web Fonts -->
    <link href='https://fonts.googleapis.com/css?family=Source+Sans+Pro:200,300,400,600,700,900,200italic,300italic,400italic,600italic,700italic,900italic' rel='stylesheet' type='text/css'>
    <!-- Bootstrap Core CSS -->
    <link href="/assets/website/css/freestash/bootstrap.min.css" rel="stylesheet">
    <!-- Flaticon CSS -->
    <link href="fonts/flaticon/flaticon.css" rel="stylesheet">
    <!-- font-awesome CSS -->
    <link href="/assets/website/css/freestash/font-awesome.min.css" rel="stylesheet">
    <!-- Offcanvas CSS -->
    <link href="/assets/website/css/freestash/hippo-off-canvas.css" rel="stylesheet">
    <!-- animate CSS -->
    <link href="/assets/website/css/freestash/animate.css" rel="stylesheet">
    <!-- language CSS -->
    <link href="/assets/website/css/freestash/language-select.css" rel="stylesheet">
    <!-- owl.carousel CSS -->
    <link href="owl.carousel/assets/owl.carousel.css" rel="stylesheet">
    <!-- magnific-popup -->
    <link href="/assets/website/css/freestash/magnific-popup.css" rel="stylesheet">
    <!-- Main menu -->
    <link href="/assets/website/css/freestash/menu.css" rel="stylesheet">
    <!-- Template Common Styles -->
    <link href="/assets/website/css/freestash/template.css" rel="stylesheet">
    <!-- Custom CSS -->
    <link href="/assets/website/css/freestash/style.css" rel="stylesheet">
    <!-- Responsive CSS -->
    <link href="/assets/website/css/freestash/responsive.css" rel="stylesheet">
    <script src="/assets/website/js/frontend/freestash/vendor/modernizr-2.8.1.min.js"></script>
    <!-- HTML5 Shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
            <script src="/assets/website/js/frontend/freestash/vendor/html5shim.js"></script>
            <script src="/assets/website/js/frontend/freestash/vendor/respond.min.js"></script>
        <![endif]-->
    
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-5JCKZCKJR4"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-5JCKZCKJR4');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="page-top" data-page="detail">
    <div id="st-container" class="st-container">
        <div class="st-pusher">
            <div class="st-content">
                                <header class="header">
                    <nav class="navbar navbar-default" role="navigation">
                        <div class="container mainnav">
                            <div class="navbar-header">
                                                                <a class="navbar-brand" href="/">
                                    <span class="logo">Free Stash</span>
                                </a>
                                                                <!-- offcanvas-trigger -->
                                <button type="button" class="navbar-toggle collapsed pull-right visible-xs">
                                    <span class="sr-only">Toggle navigation</span>
                                    <i class="fa fa-bars"></i>
                                </button>
                            </div>
                            <!-- Collect the nav links, forms, and other content for toggling -->
                            <div class="collapse navbar-collapse navbar-collapse">
                                <ul class="nav navbar-nav navbar-right">
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                        <li><a href="#">关于</a></li>
                                    <li><a href="#">联系</a></li>
                                </ul>
                            </div><!-- /.navbar-collapse -->
                        </div><!-- /.container -->
                    </nav>
                </header>
                <section class="page-title-section">
                    <div class="container">
                        <div class="row">
                            <div class="col-xs-12">
                                <div class="page-header-wrap">
                                    <div class="page-header">
                                        <h1>Linux  C++  实现一个简易版的ping （也就是ICMP协议）</h1>
                                    </div>
                                    <ol class="breadcrumb">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/news/">新闻资讯</a></li>
                                        <li class="active">正文</li>
                                    </ol>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- services start -->
                <section class="service-home section-padding">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-9">
                                                <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				</h1> <p>想实现一个在没外网的时候就自动重启路由器的功能。</p> <p>又不想用ping命令，因为在代码里调用system("ping"); 可能会比较耗时，得单开线程。于是找了个实现ICMP协议的代码。</p> <p>参考：https://blog.csdn.net/qivan/article/details/7237051</p> </h1> <div class="cnblogs_code"> <pre>#include &lt;stdio.h&gt;<span style="color: rgba(0, 0, 0, 1)"> #include</span>&lt;sys/socket.h&gt;<span style="color: rgba(0, 0, 0, 1)"> #include</span>&lt;netinet/<span style="color: rgba(0, 0, 255, 1)">in</span>.h&gt;<span style="color: rgba(0, 0, 0, 1)"> #include</span>&lt;netinet/ip.h&gt;<span style="color: rgba(0, 0, 0, 1)"> #include</span>&lt;netinet/ip_icmp.h&gt;<span style="color: rgba(0, 0, 0, 1)"> #include</span>&lt;arpa/inet.h&gt;<span style="color: rgba(0, 0, 0, 1)"> #include</span>&lt;sys/types.h&gt;<span style="color: rgba(0, 0, 0, 1)"> #include</span>&lt;sys/time.h&gt;<span style="color: rgba(0, 0, 0, 1)"> #include</span>&lt;unistd.h&gt;<span style="color: rgba(0, 0, 0, 1)"> #include</span>&lt;netdb.h&gt;<span style="color: rgba(0, 0, 0, 1)"> #include</span>&lt;<span style="color: rgba(0, 0, 255, 1)">string</span>.h&gt;<span style="color: rgba(0, 0, 255, 1)">#define</span> PACKET_SIZE     4096<span style="color: rgba(0, 0, 255, 1)">#define</span> ERROR           0<span style="color: rgba(0, 0, 255, 1)">#define</span> SUCCESS         1<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">效验算法（百度下有注释，但是还是看不太明白）</span> unsigned<span style="color: rgba(0, 0, 255, 1)">short</span> cal_chksum(unsigned<span style="color: rgba(0, 0, 255, 1)">short</span> *addr,<span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> len) {</span><span style="color: rgba(0, 0, 255, 1)">int</span> nleft=<span style="color: rgba(0, 0, 0, 1)">len;</span><span style="color: rgba(0, 0, 255, 1)">int</span> sum=<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">;     unsigned</span><span style="color: rgba(0, 0, 255, 1)">short</span> *w=<span style="color: rgba(0, 0, 0, 1)">addr;     unsigned</span><span style="color: rgba(0, 0, 255, 1)">short</span> answer=<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 0, 255, 1)">while</span>(nleft &gt;<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">)     {         sum</span>+= *w++<span style="color: rgba(0, 0, 0, 1)">;         nleft</span>-=<span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)">;     }</span><span style="color: rgba(0, 0, 255, 1)">if</span>( nleft ==<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">)     {</span>*(unsigned<span style="color: rgba(0, 0, 255, 1)">char</span> *)(&amp;answer) = *(unsigned<span style="color: rgba(0, 0, 255, 1)">char</span> *<span style="color: rgba(0, 0, 0, 1)">)w;         sum</span>+=<span style="color: rgba(0, 0, 0, 1)"> answer;     }          sum</span>= (sum &gt;&gt;<span style="color: rgba(128, 0, 128, 1)">16</span>) + (sum &amp;<span style="color: rgba(128, 0, 128, 1)">0xffff</span><span style="color: rgba(0, 0, 0, 1)">);     sum</span>+= (sum &gt;&gt;<span style="color: rgba(128, 0, 128, 1)">16</span><span style="color: rgba(0, 0, 0, 1)">);     answer</span>= ~<span style="color: rgba(0, 0, 0, 1)">sum;</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> answer; }</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Ping函数</span><span style="color: rgba(0, 0, 255, 1)">int</span> ping(<span style="color: rgba(0, 0, 255, 1)">char</span> *ips,<span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> timeout)   {</span><span style="color: rgba(0, 0, 255, 1)">struct</span> timeval *<span style="color: rgba(0, 0, 0, 1)">tval;</span><span style="color: rgba(0, 0, 255, 1)">int</span> maxfds =<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">;       fd_set readfds;</span><span style="color: rgba(0, 0, 255, 1)">struct</span><span style="color: rgba(0, 0, 0, 1)"> sockaddr_in addr;</span><span style="color: rgba(0, 0, 255, 1)">struct</span> sockaddr_in<span style="color: rgba(0, 0, 255, 1)">from</span><span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 设定Ip信息</span>     bzero(&amp;addr,<span style="color: rgba(0, 0, 255, 1)">sizeof</span><span style="color: rgba(0, 0, 0, 1)">(addr));       addr.sin_family</span>=<span style="color: rgba(0, 0, 0, 1)"> AF_INET;        addr.sin_addr.s_addr</span>=<span style="color: rgba(0, 0, 0, 1)"> inet_addr(ips);</span><span style="color: rgba(0, 0, 255, 1)">#if</span> 1<span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> sockfd;</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 取得socket  。  如果没加sudo 这里会报错</span>     sockfd =<span style="color: rgba(0, 0, 0, 1)"> socket(AF_INET, SOCK_RAW, IPPROTO_ICMP);</span><span style="color: rgba(0, 0, 255, 1)">if</span> (sockfd &lt;<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">)       {           printf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ip:%s,socket error\n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,ips);</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> ERROR;       }</span><span style="color: rgba(0, 0, 255, 1)">struct</span><span style="color: rgba(0, 0, 0, 1)"> timeval timeo;</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 设定TimeOut时间</span>     timeo.tv_sec = timeout /<span style="color: rgba(128, 0, 128, 1)">1000</span><span style="color: rgba(0, 0, 0, 1)">;       timeo.tv_usec</span>= timeout %<span style="color: rgba(128, 0, 128, 1)">1000</span><span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 0, 255, 1)">if</span> (setsockopt(sockfd, SOL_SOCKET, SO_SNDTIMEO, &amp;timeo,<span style="color: rgba(0, 0, 255, 1)">sizeof</span>(timeo)) == -<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">)       {           printf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ip:%s,setsockopt error\n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,ips);</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> ERROR;       }</span><span style="color: rgba(0, 0, 255, 1)">char</span><span style="color: rgba(0, 0, 0, 1)"> sendpacket[PACKET_SIZE];</span><span style="color: rgba(0, 0, 255, 1)">char</span><span style="color: rgba(0, 0, 0, 1)"> recvpacket[PACKET_SIZE];</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 设定Ping包</span>     memset(sendpacket,<span style="color: rgba(128, 0, 128, 1)">0</span>,<span style="color: rgba(0, 0, 255, 1)">sizeof</span><span style="color: rgba(0, 0, 0, 1)">(sendpacket));            pid_t pid;</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 取得PID，作为Ping的Sequence ID</span>     pid=<span style="color: rgba(0, 0, 0, 1)">getpid();</span><span style="color: rgba(0, 0, 255, 1)">struct</span> ip *<span style="color: rgba(0, 0, 0, 1)">iph;</span><span style="color: rgba(0, 0, 255, 1)">struct</span> icmp *<span style="color: rgba(0, 0, 0, 1)">icmp;               icmp</span>=(<span style="color: rgba(0, 0, 255, 1)">struct</span> icmp*<span style="color: rgba(0, 0, 0, 1)">)sendpacket;       icmp</span>-&gt;icmp_type=ICMP_ECHO;<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">回显请求</span>     icmp-&gt;icmp_code=<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">;       icmp</span>-&gt;icmp_cksum=<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">;       icmp</span>-&gt;icmp_seq=<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">;       icmp</span>-&gt;icmp_id=<span style="color: rgba(0, 0, 0, 1)">pid;      tval</span>= (<span style="color: rgba(0, 0, 255, 1)">struct</span> timeval *)icmp-&gt;<span style="color: rgba(0, 0, 0, 1)">icmp_data;       gettimeofday(tval,NULL);       icmp</span>-&gt;icmp_cksum=cal_chksum((unsigned<span style="color: rgba(0, 0, 255, 1)">short</span> *)icmp,<span style="color: rgba(0, 0, 255, 1)">sizeof</span>(<span style="color: rgba(0, 0, 255, 1)">struct</span> icmp));<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">校验</span><span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> n;</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 发包 。可以把这个发包挪到循环里面去。</span>     n = sendto(sockfd, (<span style="color: rgba(0, 0, 255, 1)">char</span> *)&amp;sendpacket,<span style="color: rgba(0, 0, 255, 1)">sizeof</span>(<span style="color: rgba(0, 0, 255, 1)">struct</span> icmp),<span style="color: rgba(128, 0, 128, 1)">0</span>, (<span style="color: rgba(0, 0, 255, 1)">struct</span> sockaddr *)&amp;addr,<span style="color: rgba(0, 0, 255, 1)">sizeof</span><span style="color: rgba(0, 0, 0, 1)">(addr));</span><span style="color: rgba(0, 0, 255, 1)">if</span> (n &lt;<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">)       {           printf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ip:%s,sendto error\n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,ips);</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> ERROR;       }</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 接受</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 由于可能接受到其他Ping的应答消息，所以这里要用循环</span><span style="color: rgba(0, 0, 255, 1)">while</span>(<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">)       {</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 设定TimeOut时间，这次才是真正起作用的</span>         FD_ZERO(&amp;<span style="color: rgba(0, 0, 0, 1)">readfds);           FD_SET(sockfd,</span>&amp;<span style="color: rgba(0, 0, 0, 1)">readfds);           maxfds</span>= sockfd +<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">;           n</span>=<span style="color: rgba(0, 0, 255, 1)">select</span>(maxfds, &amp;readfds, NULL, NULL, &amp;<span style="color: rgba(0, 0, 0, 1)">timeo);</span><span style="color: rgba(0, 0, 255, 1)">if</span> (n &lt;=<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">)           {                       printf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ip:%s,Time out error\n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,ips);               close(sockfd);</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> ERROR;           }</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 接受</span>         memset(recvpacket,<span style="color: rgba(128, 0, 128, 1)">0</span>,<span style="color: rgba(0, 0, 255, 1)">sizeof</span><span style="color: rgba(0, 0, 0, 1)">(recvpacket));</span><span style="color: rgba(0, 0, 255, 1)">int</span> fromlen =<span style="color: rgba(0, 0, 255, 1)">sizeof</span>(<span style="color: rgba(0, 0, 255, 1)">from</span><span style="color: rgba(0, 0, 0, 1)">);           n</span>= recvfrom(sockfd, recvpacket,<span style="color: rgba(0, 0, 255, 1)">sizeof</span>(recvpacket),<span style="color: rgba(128, 0, 128, 1)">0</span>, (<span style="color: rgba(0, 0, 255, 1)">struct</span> sockaddr *)&amp;<span style="color: rgba(0, 0, 255, 1)">from</span>, (socklen_t *)&amp;<span style="color: rgba(0, 0, 0, 1)">fromlen);       printf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">recvfrom Len:%d\n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,n);</span><span style="color: rgba(0, 0, 255, 1)">if</span> (n &lt;<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">)      {</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> ERROR;           }</span><span style="color: rgba(0, 0, 255, 1)">char</span> *from_ip = (<span style="color: rgba(0, 0, 255, 1)">char</span> *)inet_ntoa(<span style="color: rgba(0, 0, 255, 1)">from</span><span style="color: rgba(0, 0, 0, 1)">.sin_addr);</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 判断是否是自己Ping的回复</span><span style="color: rgba(0, 0, 255, 1)">if</span> (strcmp(from_ip,ips) !=<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">)           {               printf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">NowPingip:%s Fromip:%s NowPingip is not same to Fromip,so ping wrong!\n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,ips,from_ip);</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> ERROR;         }                    iph</span>= (<span style="color: rgba(0, 0, 255, 1)">struct</span> ip *<span style="color: rgba(0, 0, 0, 1)">)recvpacket;                    icmp</span>=(<span style="color: rgba(0, 0, 255, 1)">struct</span> icmp *)(recvpacket + (iph-&gt;ip_hl&lt;&lt;<span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)">));                    printf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ip:%s,icmp-&gt;icmp_type:%d,icmp-&gt;icmp_id:%d\n</span><span style="color: rgba(128, 0, 0, 1)">"</span>,ips,icmp-&gt;icmp_type,icmp-&gt;<span style="color: rgba(0, 0, 0, 1)">icmp_id);</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 判断Ping回复包的状态</span><span style="color: rgba(0, 0, 255, 1)">if</span> (icmp-&gt;icmp_type == ICMP_ECHOREPLY &amp;&amp; icmp-&gt;icmp_id == pid)<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">ICMP_ECHOREPLY回显应答</span><span style="color: rgba(0, 0, 0, 1)">        {</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 正常就退出循环</span>         printf(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">icmp succecss .............  \n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 0, 255, 1)">break</span><span style="color: rgba(0, 0, 0, 1)">;           }</span><span style="color: rgba(0, 0, 255, 1)">else</span><span style="color: rgba(0, 0, 0, 1)">           {</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 否则继续等</span><span style="color: rgba(0, 0, 255, 1)">continue</span><span style="color: rgba(0, 0, 0, 1)">;           }       }</span><span style="color: rgba(0, 0, 255, 1)">#endif</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> SUCCESS; }</span><span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> main() {</span><span style="color: rgba(0, 0, 255, 1)">#if</span> 1<span style="color: rgba(0, 0, 255, 1)">char</span> cPing[<span style="color: rgba(128, 0, 128, 1)">16</span><span style="color: rgba(0, 0, 0, 1)">];     printf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Please input ping IP:</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);     scanf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">%s</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,cPing);</span><span style="color: rgba(0, 0, 255, 1)">#else</span><span style="color: rgba(0, 0, 255, 1)">char</span> *cPing =<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">192.168.1.200</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 0, 255, 1)">#endif</span><span style="color: rgba(0, 0, 255, 1)">if</span>(ping(cPing,<span style="color: rgba(128, 0, 128, 1)">10000</span><span style="color: rgba(0, 0, 0, 1)">))     {         printf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Ping succeed!\n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);     }</span><span style="color: rgba(0, 0, 255, 1)">else</span><span style="color: rgba(0, 0, 0, 1)">     {         printf(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Ping wrong!\n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);     }</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">;     }</span></pre> </div> </h1> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/5da809c6847ea3937caed0e459c6659b.jpg" alt="Linux  C++  实现一个简易版的ping （也就是ICMP协议）"></p> </h1> <p>0）直接用参考链接上的代码时编译不过，不知道是不是因为我用的是cpp，没太深究。</p> <p>1）实际使用的时候需要加上sudo，不然在创建套接字那个地方会报错。我还没想好怎么在代码里用sudo，（因为实际项目运行起来是不需要加sudo的）。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-36500.htm">领养回访多久可以结束 领养回访多久可以结束呢</a></p>
                                        <p>下一个：<a href="/news/article-36986.htm">猫粮行业挣钱吗（猫粮行业挣钱吗）</a></p>
                                    </div>
                                            </div>
                            <div class="col-md-3">
                                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-20550.htm" title="HTML中schema.org SiteNavigationElement的正确用法是什么？">HTML中schema.org SiteNavigationElement的正确用法是什么？</a></li>
                        <li class="py-2"><a href="/news/article-46387.htm" title="领养狗狗去哪个平台的简单介绍">领养狗狗去哪个平台的简单介绍</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-30-node-share.htm" title="1月30日→19.2M/S|2025年最新免费节点Free Stash订阅链接地址">1月30日→19.2M/S|2025年最新免费节点Free Stash订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-49862.htm" title="猫咪体外驱虫中毒怎么解毒（猫体外驱虫药过量处理方法）">猫咪体外驱虫中毒怎么解毒（猫体外驱虫药过量处理方法）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-29-linux-clash-stash.htm" title="11月29日→21.1M/S|2024年最新免费节点Free Stash订阅链接地址">11月29日→21.1M/S|2024年最新免费节点Free Stash订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-15-free-subscribe-node.htm" title="12月15日→21.1M/S|2024年最新免费节点Free Stash订阅链接地址">12月15日→21.1M/S|2024年最新免费节点Free Stash订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-42916.htm" title="动物疫苗扎到手里怎么办啊视频（动物疫苗扎到手里怎么办啊视频教学）">动物疫苗扎到手里怎么办啊视频（动物疫苗扎到手里怎么办啊视频教学）</a></li>
                        <li class="py-2"><a href="/news/article-31714.htm" title="仓鼠得了皮肤病该怎么办（仓鼠得皮肤病的图片大全）">仓鼠得了皮肤病该怎么办（仓鼠得皮肤病的图片大全）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-6-node-share-links.htm" title="11月6日→22.4M/S|2024年最新免费节点Free Stash订阅链接地址">11月6日→22.4M/S|2024年最新免费节点Free Stash订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-34576.htm" title="成都领养宠物中心电话（成都领养宠物中心电话地址）">成都领养宠物中心电话（成都领养宠物中心电话地址）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                            </div>
                        </div> <!-- /.row -->
                    </div><!-- /.container -->
                </section>
                <!-- services end -->
                <!-- copyright-section start -->
                <footer class="copyright-section">
                    <div class="container text-center">
                        <div class="copyright-info">
                            <a href="/">Free Stash机场节点订阅官网</a> 版权所有 Powered by WordPress
                        </div>
                    </div><!-- /.container -->
                </footer>
                <!-- copyright-section end -->
            </div> <!-- .st-content -->
        </div> <!-- .st-pusher -->
                <!-- OFF CANVAS MENU -->
        <div class="offcanvas-menu offcanvas-effect">
            <div class="offcanvas-wrap">
                <div class="off-canvas-header">
                    <button type="button" class="close" aria-hidden="true" data-toggle="offcanvas" id="off-canvas-close-btn">&times;</button>
                </div>
                <ul id="offcanvasMenu" class="list-unstyled visible-xs visible-sm">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/free-nodes/">免费节点</a></li>
                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a href="/news/">新闻资讯</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
            </div>
        </div><!-- .offcanvas-menu -->
    </div><!-- /st-container -->
        <!-- Preloader -->
    <div id="preloader">
        <div id="status">
            <div class="status-mes"></div>
        </div>
    </div>
    <!-- jQuery -->
    <script src="/assets/website/js/frontend/freestash/jquery.js"></script>
    <!-- Bootstrap Core JavaScript -->
    <script src="/assets/website/js/frontend/freestash/bootstrap.min.js"></script>
    <!-- owl.carousel -->
    <script src="/assets/website/js/frontend/freestash/owl.carousel/owl.carousel.min.js"></script>
    <!-- Magnific-popup -->
    <script src="/assets/website/js/frontend/freestash/jquery.magnific-popup.min.js"></script>
    <!-- Offcanvas Menu -->
    <script src="/assets/website/js/frontend/freestash/hippo-offcanvas.js"></script>
    <!-- inview -->
    <script src="/assets/website/js/frontend/freestash/jquery.inview.min.js"></script>
    <!-- stellar -->
    <script src="/assets/website/js/frontend/freestash/jquery.stellar.js"></script>
    <!-- countTo -->
    <script src="/assets/website/js/frontend/freestash/jquery.countTo.js"></script>
    <!-- classie -->
    <script src="/assets/website/js/frontend/freestash/classie.js"></script>
    <!-- selectFx -->
    <script src="/assets/website/js/frontend/freestash/selectFx.js"></script>
    <!-- sticky kit -->
    <script src="/assets/website/js/frontend/freestash/jquery.sticky-kit.min.js"></script>
    <!--TWITTER FETCHER-->
    <script src="/assets/website/js/frontend/freestash/twitterFetcher_min.js"></script>
    <!-- Custom Script -->
    <script src="/assets/website/js/frontend/freestash/scripts.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>